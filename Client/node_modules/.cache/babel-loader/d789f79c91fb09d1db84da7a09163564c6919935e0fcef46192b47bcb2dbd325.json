{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Person\\\\Desktop\\\\HCP\\\\Client\\\\src\\\\Presentation\\\\Screens\\\\GetStarted\\\\GetStarted.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\"; // Import Axios for making HTTP requests\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login(setSignupMode, form) {\n  _s();\n  const navigate = useNavigate();\n  const [errorMessage, setErrorMessage] = useState(null);\n  const login = async e => {\n    e.preventDefault();\n    try {\n      const formData = new FormData(form.current);\n      const response = await axios.post(\"http://your-backend-api/login\", formData);\n      console.log(\"Login successful:\", response.data);\n      // Check if login was successful (you can customize this based on your backend response)\n      if (response.data.success) {\n        alert(\"Login successful\"); // Display a success message\n        // Redirect the user to the dashboard page after successful login\n        navigate(\"/dashboard\");\n      } else {\n        // If login was not successful, display an error message\n        setErrorMessage(\"Invalid email or password. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      setErrorMessage(\"Login failed. Please try again.\"); // Set error message if login fails\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ActiveMode\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"active\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setSignupMode(),\n        children: \" / Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"GetStartedForm\",\n      ref: form,\n      onSubmit: login,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"LOGIN\"\n      }, 'submitButton', false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true);\n}\n_s(Login, \"MSp3kVcXuETomsmfEDd/Z4c3bPs=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","setSignupMode","form","_s","navigate","errorMessage","setErrorMessage","login","e","preventDefault","formData","FormData","current","response","post","console","log","data","success","alert","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","onSubmit","type","name","placeholder","required","value","_c","$RefreshReg$"],"sources":["C:/Users/Person/Desktop/HCP/Client/src/Presentation/Screens/GetStarted/GetStarted.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\"; // Import Axios for making HTTP requests\r\n\r\nfunction Login(setSignupMode, form) {\r\n  const navigate = useNavigate();\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  const login = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const formData = new FormData(form.current);\r\n      const response = await axios.post(\"http://your-backend-api/login\", formData);\r\n      console.log(\"Login successful:\", response.data);\r\n      // Check if login was successful (you can customize this based on your backend response)\r\n      if (response.data.success) {\r\n        alert(\"Login successful\"); // Display a success message\r\n        // Redirect the user to the dashboard page after successful login\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        // If login was not successful, display an error message\r\n        setErrorMessage(\"Invalid email or password. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error);\r\n      setErrorMessage(\"Login failed. Please try again.\"); // Set error message if login fails\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ActiveMode\">\r\n        <span className=\"active\">Login</span>\r\n        <span onClick={() => setSignupMode()}> / Signup</span>\r\n      </div>\r\n      <form className=\"GetStartedForm\" ref={form} onSubmit={login}>\r\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" required />\r\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" required />\r\n        <input type=\"submit\" value=\"LOGIN\" key={'submitButton'}/>\r\n      </form>\r\n      {errorMessage && <div className=\"error\">{errorMessage}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}